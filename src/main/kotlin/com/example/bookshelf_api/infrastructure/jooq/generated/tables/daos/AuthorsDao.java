/*
 * This file is generated by jOOQ.
 */
package com.example.bookshelf_api.infrastructure.jooq.generated.tables.daos;


import com.example.bookshelf_api.infrastructure.jooq.generated.tables.Authors;
import com.example.bookshelf_api.infrastructure.jooq.generated.tables.records.AuthorsRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthorsDao extends DAOImpl<AuthorsRecord, com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors, Integer> {

    /**
     * Create a new AuthorsDao without any configuration
     */
    public AuthorsDao() {
        super(Authors.AUTHORS, com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors.class);
    }

    /**
     * Create a new AuthorsDao with an attached configuration
     */
    public AuthorsDao(Configuration configuration) {
        super(Authors.AUTHORS, com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors.class, configuration);
    }

    @Override
    public Integer getId(com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Authors.AUTHORS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchById(Integer... values) {
        return fetch(Authors.AUTHORS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors fetchOneById(Integer value) {
        return fetchOne(Authors.AUTHORS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchOptionalById(Integer value) {
        return fetchOptional(Authors.AUTHORS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Authors.AUTHORS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchByName(String... values) {
        return fetch(Authors.AUTHORS.NAME, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Authors.AUTHORS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Authors.AUTHORS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Authors.AUTHORS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.bookshelf_api.infrastructure.jooq.generated.tables.pojos.Authors> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Authors.AUTHORS.UPDATED_AT, values);
    }
}
